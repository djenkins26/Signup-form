{"version":3,"sources":["useForm.js","validateInfo.js","FormSignup.js","FormSuccess.js","Form.js","App.js","index.js"],"names":["useForm","callback","validate","useState","fullname","email","password","password2","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","e","target","name","value","handleSubmit","preventDefault","validateInfo","trim","test","FormSignup","submitForm","className","onSubmit","htmlFor","id","type","placeholder","onChange","FormSuccess","Form","isSubmitted","setIsSubmitted","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04765d98.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    fullname: \"\",\n    email: \"\",\n    password:\"\",\n    password2: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState\n  (false);\n\n  const handleChange = e => {\n    const { name, value} = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n// dont submit without any credentials\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 &&\n  isSubmitting) {\n    callback();\n  }\n},\n[errors]\n\n);\n\n  return { handleChange, values, handleSubmit, errors };\n};\n\n\nexport default useForm;\n","export default function validateInfo(values) {\n  let errors = {}\n\n  if(!values.fullname.trim()) {\n    errors.fullname = \"fullname required\"\n  }\n\n  //email, else if needs to have @ and .com\n  if(!values.email) {\n    errors.email = \"Email required\"\n  } else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email= \"Email address is invalid\";\n  }\n\n  if(!values.password) {\n    errors.password = \"Password is required\"\n  } else if (values.password.length < 6) {\n    errors.password = \"Password needs to be 6 characters or more\";\n  }\n\n  if(!values.password2) {\n    errors.password2 = \"Password is required\";\n  } else if (values.password2 !== values.password) {\n    errors.password2 = \"Passwords do not match\";\n  }\n  return errors\n}\n","import React from 'react';\nimport useForm from './useForm';\nimport validate from './validateInfo';\nimport './Form.css';\n\nconst FormSignup = ({ submitForm }) => {\n  //restructure\n  const { handleChange, values, handleSubmit, errors }\n  = useForm(submitForm, validate);\n\n  return (\n    <div className= \"form-details\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <h1>Welcome!</h1>\n        <h2> Sign up Below.</h2>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"fullname\"\n          className=\"form-label\">\n            Fullname:\n          </label>\n          <input\n            id=\"fullname\"\n            type=\"text\"\n            name=\"fullname\"\n            className=\"form-input\"\n            placeholder=\"Enter your full name\"\n            value={values.fullname}\n            onChange={handleChange}\n          />\n          {errors.fullname && <p>{errors.fullname}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"email\"\n          className=\"form-label\">\n          Email:\n        </label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          className=\"form-input\"\n          placeholder=\"Enter your email\"\n          value={values.email}\n          onChange={handleChange}\n        />\n        {errors.email && <p>{errors.email}</p>}\n      </div>\n      <div className=\"form-inputs\">\n        <label htmlFor=\"password\"\n        className=\"form-label\">\n        Password:\n      </label>\n      <input\n        id=\"password\"\n        type=\"password\"\n        name=\"password\"\n        className=\"form-input\"\n        placeholder=\"Enter your password\"\n        value={values.password}\n        onChange={handleChange}\n      />\n      {errors.password && <p>{errors.password}</p>}\n    </div>\n    <div className=\"form-inputs\">\n      <label htmlFor=\"password2\"\n      className=\"form-label\">\n      Confirm Password:\n    </label>\n    <input\n      id=\"password2\"\n      type=\"password\"\n      name=\"password2\"\n      className=\"form-input\"\n      placeholder=\"Enter your password\"\n      value={values.password2}\n      onChange={handleChange}\n    />\n    {errors.password2 && <p>{errors.password2}</p>}\n  </div>\n\n  <button className=\"form=input-btn\"\n  type=\"submit\">\n    Sign up\n  </button>\n\n  </form>\n  </div>\n  );\n};\n\nexport default FormSignup;\n","import React from 'react'\n\nconst FormSuccess = () => {\n  return (\n    <div className=\"form-details\">\n      <div className=\"form-success\">We have received your request!</div>\n    </div>\n  );\n};\n\nexport default FormSuccess;\n","import React, { useState } from 'react';\nimport FormSignup from './FormSignup';\nimport FormSuccess from './FormSuccess';\nimport './Form.css';\n\nconst Form = () => {\n  const [isSubmitted, setIsSubmitted] = useState(false)\n  ;\n\n  function submitForm() {\n    setIsSubmitted(true);\n  }\n  return (\n    <div>\n      {!isSubmitted ? <FormSignup submitForm=\n        {submitForm} /> : <FormSuccess />}\n    </div>\n  );\n};\n\nexport default Form;\n","\nimport './App.css';\nimport Form from './Form'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"signup-form\">\n        <Form />\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}