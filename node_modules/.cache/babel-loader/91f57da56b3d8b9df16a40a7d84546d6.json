{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    fullname: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  }; // dont submit without any credentials\n\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  };\n};\n\n_s(useForm, \"hOJs6Xb4SiU9EOtBOU/KMmK2Y5E=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/danyellejenkins/Signup-form/signup-form/src/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","values","setValues","fullname","email","password","password2","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault","Object","keys","length"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACnCO,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAC,EAH0B;AAInCC,IAAAA,SAAS,EAAE;AAJwB,GAAD,CAApC;AAMA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAC/C,KAD+C,CAAhD;;AAGA,QAAMe,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAiBF,CAAC,CAACG,MAAzB;AACAb,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACY,IAAD,GAAQC;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,YAAY,GAAGJ,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACK,cAAF;AAEAT,IAAAA,SAAS,CAACR,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAS,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GALD,CAnBsC,CAyBxC;;;AACEb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAA/B,IACNX,YADE,EACY;AACZV,MAAAA,QAAQ;AACT;AACF,GALU,EAMX,CAACQ,MAAD,CANW,CAAT;AAUA,SAAO;AAAEI,IAAAA,YAAF;AAAgBV,IAAAA,MAAhB;AAAwBe,IAAAA,YAAxB;AAAsCT,IAAAA;AAAtC,GAAP;AACD,CArCD;;GAAMT,O;;AAwCN,eAAeA,OAAf","sourcesContent":["import {useState, useEffect} from 'react';\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    fullname: \"\",\n    email: \"\",\n    password:\"\",\n    password2: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState\n  (false);\n\n  const handleChange = e => {\n    const { name, value} = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n// dont submit without any credentials\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 &&\n  isSubmitting) {\n    callback();\n  }\n},\n[errors]\n\n);\n\n  return { handleChange, values, handleSubmit, errors };\n};\n\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}